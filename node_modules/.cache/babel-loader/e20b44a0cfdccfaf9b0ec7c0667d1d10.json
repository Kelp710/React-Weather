{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bz178\\\\OneDrive\\\\\\u30C9\\u30AD\\u30E5\\u30E1\\u30F3\\u30C8\\\\React\\\\React-Weather\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // process.env.WEATHER_API_KEY\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"3c35fb7958da2c2b8cb2654a8364e8f6\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nfunction App() {\n  _s();\n\n  const [location, setLocation] = useState(\"\");\n  const [weather, setWeather] = useState({});\n\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day}, ${date} ${month} ${year}`;\n  };\n\n  const search = () => {\n    fetch(`${api.base}weather?q=${location}&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n      if (result.message === \"city not found\") {\n        setLocation(\"\");\n      } else {\n        setWeather(result);\n        setLocation(\"\");\n        console.log(result);\n      }\n    });\n  };\n\n  console.log(weather.main);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: ``\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this) // // <div className='cold-app'>yabe</div>\n  // <div className={(weather.main.temp) ? ((weather.main.temp > 20) ? \"App-warm\": `App-cold`): \"App-cold\"}>\n  //   <main>\n  //     <div className='search-box'>\n  //       <input\n  //         type=\"text\"\n  //         className='search-bar'\n  //         placeholder='Search...'\n  //         onChange={eve => setLocation(eve.target.value)}\n  //         value={location}\n  //         onKeyPress={search}\n  //       />\n  //     </div>\n  //     {(weather.main.temp) ? (\n  //       <div>\n  //         <div className='lacation-box'>\n  //           <div className='location'>{weather.name}, {weather.sys.country}</div>\n  //           <div className='date'>{dateBuilder(new Date())}</div>\n  //         </div>\n  //         <div className='weather-box'>\n  //           <div className='temp'>{weather.main.temp.toFixed(1)}°c</div>\n  //           <div id=\"icon\"><img id=\"wicon\" src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt=\"Weather icon\"/></div>\n  //           <div className='weather'>{weather.weather[0].description}</div>\n  //         </div>\n  //       </div>\n  //     ):(\"\") }\n  //   </main>\n  // </div>\n  ;\n}\n\n_s(App, \"AtD1Q3ju/gukUUFE6Qnl7aF8Goc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","api","key","base","App","location","setLocation","weather","setWeather","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","search","fetch","then","res","json","result","message","console","log","main"],"sources":["C:/Users/bz178/OneDrive/ドキュメント/React/React-Weather/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\n// process.env.WEATHER_API_KEY\r\nconst api = {\r\n  key: \"3c35fb7958da2c2b8cb2654a8364e8f6\",\r\n  base: \"https://api.openweathermap.org/data/2.5/\"\r\n}\r\n\r\n\r\nfunction App() {\r\n  \r\n  const [location, setLocation] = useState(\"\")\r\n  const [weather, setWeather] = useState({})\r\n\r\nconst dateBuilder = (d) => {\r\n  let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n  let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n  let day = days[d.getDay()];\r\n  let date = d.getDate();\r\n  let month = months[d.getMonth()];\r\n  let year = d.getFullYear();\r\n\r\n  return `${day}, ${date} ${month} ${year}`\r\n}\r\n\r\nconst search = () => {\r\n\r\n    fetch(`${api.base}weather?q=${location}&units=metric&APPID=${api.key}`)\r\n    .then (res => res.json())\r\n    .then (result => {\r\n      if (result.message === \"city not found\") {\r\n        setLocation(\"\")\r\n      }\r\n      else {\r\n      setWeather(result);\r\n      setLocation(\"\");\r\n      console.log(result);\r\n    }});\r\n}\r\nconsole.log(weather.main)\r\n  return (\r\n\r\n    <div>{``}</div>\r\n    // // <div className='cold-app'>yabe</div>\r\n    // <div className={(weather.main.temp) ? ((weather.main.temp > 20) ? \"App-warm\": `App-cold`): \"App-cold\"}>\r\n    //   <main>\r\n    //     <div className='search-box'>\r\n    //       <input\r\n    //         type=\"text\"\r\n    //         className='search-bar'\r\n    //         placeholder='Search...'\r\n    //         onChange={eve => setLocation(eve.target.value)}\r\n    //         value={location}\r\n    //         onKeyPress={search}\r\n    //       />\r\n    //     </div>\r\n    //     {(weather.main.temp) ? (\r\n    //       <div>\r\n    //         <div className='lacation-box'>\r\n    //           <div className='location'>{weather.name}, {weather.sys.country}</div>\r\n    //           <div className='date'>{dateBuilder(new Date())}</div>\r\n    //         </div>\r\n    //         <div className='weather-box'>\r\n    //           <div className='temp'>{weather.main.temp.toFixed(1)}°c</div>\r\n    //           <div id=\"icon\"><img id=\"wicon\" src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt=\"Weather icon\"/></div>\r\n    //           <div className='weather'>{weather.weather[0].description}</div>\r\n    //         </div>\r\n    //       </div>\r\n    //     ):(\"\") }\r\n    //   </main>\r\n    // </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;;AACA,MAAMC,GAAG,GAAG;EACVC,GAAG,EAAE,kCADK;EAEVC,IAAI,EAAE;AAFI,CAAZ;;AAMA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;;EAEF,MAAMS,WAAW,GAAIC,CAAD,IAAO;IACzB,IAAIC,MAAM,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G,CAAb;IACA,IAAIC,IAAI,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,QAAzD,EAAmE,UAAnE,CAAX;IAEA,IAAIC,GAAG,GAAGD,IAAI,CAACF,CAAC,CAACI,MAAF,EAAD,CAAd;IACA,IAAIC,IAAI,GAAGL,CAAC,CAACM,OAAF,EAAX;IACA,IAAIC,KAAK,GAAGN,MAAM,CAACD,CAAC,CAACQ,QAAF,EAAD,CAAlB;IACA,IAAIC,IAAI,GAAGT,CAAC,CAACU,WAAF,EAAX;IAEA,OAAQ,GAAEP,GAAI,KAAIE,IAAK,IAAGE,KAAM,IAAGE,IAAK,EAAxC;EACD,CAVD;;EAYA,MAAME,MAAM,GAAG,MAAM;IAEjBC,KAAK,CAAE,GAAErB,GAAG,CAACE,IAAK,aAAYE,QAAS,uBAAsBJ,GAAG,CAACC,GAAI,EAAhE,CAAL,CACCqB,IADD,CACOC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADd,EAECF,IAFD,CAEOG,MAAM,IAAI;MACf,IAAIA,MAAM,CAACC,OAAP,KAAmB,gBAAvB,EAAyC;QACvCrB,WAAW,CAAC,EAAD,CAAX;MACD,CAFD,MAGK;QACLE,UAAU,CAACkB,MAAD,CAAV;QACApB,WAAW,CAAC,EAAD,CAAX;QACAsB,OAAO,CAACC,GAAR,CAAYH,MAAZ;MACD;IAAC,CAVF;EAWH,CAbD;;EAcAE,OAAO,CAACC,GAAR,CAAYtB,OAAO,CAACuB,IAApB;EACE,oBAEE;IAAA,UAAO;EAAP;IAAA;IAAA;IAAA;EAAA,QAFF,CAGE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EA9BF;AAgCD;;GAhEQ1B,G;;KAAAA,G;AAmET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}