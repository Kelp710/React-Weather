{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bz178\\\\OneDrive\\\\\\u30C9\\u30AD\\u30E5\\u30E1\\u30F3\\u30C8\\\\React\\\\React-Weather\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react'; // process.env.WEATHER_API_KEY\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"3c35fb7958da2c2b8cb2654a8364e8f6\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nfunction App() {\n  _s();\n\n  const [location, setLocation] = useState(\"\");\n  const [weather, setWeather] = useState({});\n\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day}, ${date} ${month} ${year}`;\n  };\n\n  const search = e => {\n    if (e.key === \"Enter\") {\n      if (location === \"\") {\n        setLocation(\"\");\n      } else {\n        fetch(`${api.base}weather?q=${location}&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n          if (result.message === \"city not found\") {\n            setLocation(\"\");\n          } else {\n            setWeather(result);\n            setLocation(\"\");\n            console.log(result);\n          }\n        });\n      }\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    // <div className='cold-app'>yabe</div>\n    _jsxDEV(\"div\", {\n      className: typeof weather.main != \"undefined\" ? weather.main.temp > 20 ? \"App-warm\" : `App-cold` : \"App-cold\",\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-box\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"search-bar\",\n            placeholder: \"Search...\",\n            onChange: eve => setLocation(eve.target.value),\n            value: location,\n            onKeyPress: search\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), typeof weather.main.temp != \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lacation-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"location\",\n              children: [weather.name, \", \", weather.sys.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date\",\n              children: dateBuilder(new Date())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"temp\",\n              children: [weather.main.temp.toFixed(1), \"\\xB0c\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"icon\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                id: \"wicon\",\n                src: `http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`,\n                alt: \"Weather icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 30\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather\",\n              children: weather.weather[0].description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"AtD1Q3ju/gukUUFE6Qnl7aF8Goc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","api","key","base","App","location","setLocation","weather","setWeather","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","search","e","fetch","then","res","json","result","message","console","log","main","temp","eve","target","value","name","sys","country","Date","toFixed","icon","description"],"sources":["C:/Users/bz178/OneDrive/ドキュメント/React/React-Weather/src/App.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\n// process.env.WEATHER_API_KEY\r\nconst api = {\r\n  key: \"3c35fb7958da2c2b8cb2654a8364e8f6\",\r\n  base: \"https://api.openweathermap.org/data/2.5/\"\r\n}\r\n\r\n\r\nfunction App() {\r\n  \r\n  const [location, setLocation] = useState(\"\")\r\n  const [weather, setWeather] = useState({})\r\n\r\nconst dateBuilder = (d) => {\r\n  let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n  let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n  let day = days[d.getDay()];\r\n  let date = d.getDate();\r\n  let month = months[d.getMonth()];\r\n  let year = d.getFullYear();\r\n\r\n  return `${day}, ${date} ${month} ${year}`\r\n}\r\n\r\nconst search = (e) => {\r\n  if (e.key ===\"Enter\") {\r\n    if (location === \"\") {\r\n      setLocation(\"\")\r\n    }\r\n    else{\r\n      \r\n      fetch(`${api.base}weather?q=${location}&units=metric&APPID=${api.key}`)\r\n    .then (res => res.json())\r\n    .then (result => {\r\n      if (result.message === \"city not found\") {\r\n        setLocation(\"\")\r\n      }\r\n      else {\r\n      setWeather(result);\r\n      setLocation(\"\");\r\n      console.log(result);\r\n    }});\r\n  }}\r\n}\r\n  return (\r\n    // <div className='cold-app'>yabe</div>\r\n    <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp > 20) ? \"App-warm\": `App-cold`): \"App-cold\"}>\r\n      <main>\r\n        <div className='search-box'>\r\n          <input\r\n            type=\"text\"\r\n            className='search-bar'\r\n            placeholder='Search...'\r\n            onChange={eve => setLocation(eve.target.value)}\r\n            value={location}\r\n            onKeyPress={search}\r\n          />\r\n        </div>\r\n        {(typeof weather.main.temp != \"undefined\") ? (\r\n          <div>\r\n            <div className='lacation-box'>\r\n              <div className='location'>{weather.name}, {weather.sys.country}</div>\r\n              <div className='date'>{dateBuilder(new Date())}</div>\r\n            </div>\r\n            <div className='weather-box'>\r\n              <div className='temp'>{weather.main.temp.toFixed(1)}°c</div>\r\n              <div id=\"icon\"><img id=\"wicon\" src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt=\"Weather icon\"/></div>\r\n              <div className='weather'>{weather.weather[0].description}</div>\r\n            </div>\r\n          </div>\r\n        ):(\"\") }\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}